buildscript {
    ext.kotlinVersion = '1.0.0'
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath group: 'com.github.rodm', name: 'gradle-teamcity-plugin', version: '0.8'
        classpath group: 'org.jetbrains.kotlin', name: 'kotlin-gradle-plugin', version: "${kotlinVersion}"
    }
}

apply plugin: 'java'
apply plugin: 'com.github.rodm.teamcity-server'
apply plugin: 'kotlin'
apply plugin: 'idea'

group = 'org.jetbrains.teamcity.github'

version = "1.0-SNAPSHOT"

ext {
    teamcityVersion = '10.0-SNAPSHOT'
    teamcityDir = "$rootDir/servers/TeamCity-${teamcityVersion}"
    teamcityDataDir = "$rootDir/data/" + (teamcityVersion =~ /(\d+\.\d+).*/)[0][1]
    teamcityJavaHome = System.properties['java.home']
}

// Remove repositories added by plugins
project.plugins.withType(JavaPlugin) {
    project.repositories.clear()
}
repositories {
    mavenLocal()
    mavenCentral()
    maven { url "http://repository.jetbrains.com/teamcity" }
}

configurations {
}

dependencies {
    teamcity('org.eclipse.mylyn.github:org.eclipse.egit.github.core:4.1.0.201509280440-r') {
        transitive = false
    }
    teamcity(group: 'org.jetbrains.teamcity.internal', name: 'server', version: "${teamcityVersion}")
    teamcity(group: 'org.jetbrains.teamcity', name: 'oauth', version: "${teamcityVersion}")
    teamcity(group: 'org.jetbrains.teamcity', name: 'server-web-api', version: "${teamcityVersion}")
//    teamcity(group: 'org.jetbrains.teamcity.plugins', name: 'git', version: "${teamcityVersion}")
    compile("org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}")

    testCompile 'org.assertj:assertj-core:2.2.0'
}

sourceCompatibility = "1.6"
targetCompatibility = "1.6"

test {
    useTestNG()
}

teamcity {
    version = teamcityVersion

    descriptor {
        name = project.name
        displayName = 'GitHub Integration'
        version = project.version
        vendorName = 'JetBrains'
        description = 'TeamCity GitHub Integration Plugin'

        useSeparateClassloader = true

//        parameters {
//            parameter 'param', 'value'
//        }
    }

    homeDir = file(teamcityDir)
    dataDir = file(teamcityDataDir)
    javaHome = file(teamcityJavaHome)
    serverOptions = '-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5500 -Dteamcity.oauthConnections.enabled=true -Dteamcity.development.mode=true -Dteamcity.development.shadowCopyClasses=true'
}

idea {
    module {
        downloadJavadoc = false
        downloadSources = true
    }
}

deployPlugin.dependsOn(build)

task wrapper(type: Wrapper) {
    gradleVersion = '2.9'
}
